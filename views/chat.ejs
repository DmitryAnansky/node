<% layout('layout/page') %>
<% block('title', 'Global chat') %>
<script src="/vendor/bower_components/socket.io-client/dist/socket.io.js"></script>

<p>Welcome:  <%=user.get('username') %></p>

<div id="room">
    <form>
        <div class="input-group col-lg-5">
            <span class="input-group-btn">
              <button class="btn btn-default" type="submit">Send</button>
            </span>
            <input class="form-control" autocomplete="off" autofocus placeholder="Message.." type="text">
        </div>
    </form>
    <br/>
    <div class="panel panel-default col-lg-5">
        <div class="panel-body chat-body  chat">

        </div>
    </div>
</div>


<script>
    var socket = io.connect('', {
        reconnect: false
    });

    var form  = $('#room form');
    var input = $('#room input');
    var chatBody    = $('#room .chat-body');

    socket
            .on('message', function(username, message) {
                printMessage(username + '#: ' + message);
            })
            .on('leave', function(username) {
                printStatus(username + " disconnected");
            })
            .on('join', function(username) {
                printStatus(username + " connected");
            })
            .on('connect', function() {
                printStatus('connected');
                form.on('submit', sendMessage);
                input.prop('disable', false);
            })
            .on('logout', function() {
                location.href = "/";
            })
            .on('error', function(reason) {
                if(reason == "handshake unauthorized") {
                    printStatus("You are disconnected");
                } else {
                    setTimeOut(function() {
                        socket.sockets.connect();
                    }, 500);
                }
            })
            .on('disconnect', function() {
                printStatus('disconnected');
                form.off('submit', sendMessage);
                input.prop('disable', true);
                setTimeout(reconnect, 500);
            });


    function sendMessage() {
        var text = input.val();
        socket.emit('message', text, function(data) {
            printMessage("<%=user.get('username') %>#: " + text);
        });

        input.val('');
        return false;
    }

    function printMessage(message) {
        $('<p>', {text: message}).prependTo(chatBody);
    }

    function printStatus(status) {
        $('<p>', {text: status}).prependTo(chatBody);
    }

    function reconnect() {
        socket.once('error', function() {
            setTimeout(reconnect, 500);
        });
        socket.socket.connect();
    }

</script>